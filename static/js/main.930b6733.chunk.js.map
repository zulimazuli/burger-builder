{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","hoc/ReactAux.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Aux","props","children","layout","className","styles","Content","burgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Salad","Bacon","Cheese","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","i","BurgerIngredients","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","modal","Modal","style","transform","show","opacity","orderSummary","ingredientSummary","textTransform","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","purchasing","totalPrice","updatePurchasable","sum","setState","addIngredientHandler","currentCount","updatedIngredients","newPrice","removeIngredientHandler","purchaseHandler","disabledInfo","this","OrderSummary","Component","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.930b6733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__1cWox\",\"BreadTop\":\"BurgerIngredients_BreadTop__1f2zD\",\"Seeds1\":\"BurgerIngredients_Seeds1__3FWXq\",\"Seeds2\":\"BurgerIngredients_Seeds2__2emwG\",\"Meat\":\"BurgerIngredients_Meat__11tIy\",\"Cheese\":\"BurgerIngredients_Cheese__2FLWF\",\"Salad\":\"BurgerIngredients_Salad__1w9kZ\",\"Bacon\":\"BurgerIngredients_Bacon__3zw8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__Quakr\",\"Label\":\"BuildControl_Label__2WQ2h\",\"Less\":\"BuildControl_Less__XscGN\",\"More\":\"BuildControl_More__3ahic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2qLGH\",\"OrderButton\":\"BuildControls_OrderButton__16WHy\",\"enable\":\"BuildControls_enable__3Ik5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2-l3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2SMtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1ILI1\"};","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport Aux from '../../hoc/ReactAux';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst layout = (props) => (\r\n  <Aux>\r\n    <div>toolbar</div>\r\n    <main className={styles.Content}>{props.children}</main>\r\n  </Aux>\r\n);\r\n\r\nexport default layout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './BurgerIngredients.module.css';\r\n\r\nconst burgerIngredients = (props) => {\r\n  let ingredient = null;\r\n\r\n  switch (props.type) {\r\n    case 'bread-bottom':\r\n      ingredient = <div className={styles.BreadBottom}></div>;\r\n      break;\r\n    case 'bread-top':\r\n      ingredient = (\r\n        <div className={styles.BreadTop}>\r\n          <div className={styles.Seeds1}></div>\r\n          <div className={styles.Seeds2}></div>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'meat':\r\n      ingredient = <div className={styles.Meat}></div>;\r\n      break;\r\n    case 'salad':\r\n      ingredient = <div className={styles.Salad}></div>;\r\n      break;\r\n    case 'bacon':\r\n      ingredient = <div className={styles.Bacon}></div>;\r\n      break;\r\n    case 'cheese':\r\n      ingredient = <div className={styles.Cheese}></div>;\r\n      break;\r\n    default:\r\n      ingredient = null;\r\n  }\r\n\r\n  return ingredient;\r\n};\r\n\r\nburgerIngredients.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default burgerIngredients;\r\n","import React from 'react';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\nimport styles from './Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((ingKey) => {\r\n      return [...Array(props.ingredients[ingKey])].map((_, i) => {\r\n        return <BurgerIngredients key={ingKey + i} type={ingKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  }\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredients type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredients type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport styles from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => {\r\n\r\n    return (\r\n        <div className={styles.BuildControl}>\r\n            <div className={styles.Label}>{props.label}</div>\r\n            <button className={styles.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n            <button className={styles.More} onClick={props.added}>More</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\n\r\nimport styles from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => {\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n      {controls.map((ctrl) => {\r\n        return (\r\n          <BuildControl\r\n            key={ctrl.label}\r\n            label={ctrl.label}\r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}\r\n          />\r\n        );\r\n      })}\r\n      <button className={styles.OrderButton} \r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React from 'react';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nconst modal = (props) => {\r\n    return (\r\n        <div className={styles.Modal}\r\n        style={{\r\n            transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: props.show ? '1' : '0'\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modal;","import React from 'react';\r\nimport Aux from '../../../hoc/ReactAux';\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredientSummary = Object.keys(props.ingredients).map((ingKey) => {\r\n    return (\r\n      <li key={ingKey}>\r\n        <span style={{ textTransform: 'capitalize' }}>{ingKey}</span>:{' '}\r\n        {props.ingredients[ingKey]}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul> {ingredientSummary}</ul>\r\n      <p>Continue to Checkout?</p>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/ReactAux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n    },\r\n    purchasable: false,\r\n    purchasing: false,\r\n    totalPrice: 4,\r\n  };\r\n\r\n  updatePurchasable = (ingredients) => {\r\n    const sum = Object.keys(ingredients)\r\n      .map((ingKey) => ingredients[ingKey])\r\n      .reduce((sum, el) => sum + el, 0);\r\n\r\n    this.setState({ purchasable: sum > 0 });\r\n  };\r\n\r\n  addIngredientHandler = (type) => {\r\n    const currentCount = this.state.ingredients[type];\r\n    const updatedIngredients = { ...this.state.ingredients };\r\n    updatedIngredients[type] = currentCount + 1;\r\n\r\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\r\n\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n    this.updatePurchasable(updatedIngredients);\r\n  };\r\n\r\n  removeIngredientHandler = (type) => {\r\n    const currentCount = this.state.ingredients[type];\r\n    if (currentCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedIngredients = { ...this.state.ingredients };\r\n    updatedIngredients[type] = currentCount - 1;\r\n\r\n    const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\r\n\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n    this.updatePurchasable(updatedIngredients);\r\n  };\r\n\r\n  purchaseHandler = () =>\r\n  {\r\n    this.setState({purchasing: true});\r\n  }\r\n\r\n  render() {\r\n    const disabledInfo = { ...this.state.ingredients };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal show={this.state.purchasing}>\r\n          <OrderSummary ingredients={this.state.ingredients} />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          purchasable={this.state.purchasable}\r\n          price={this.state.totalPrice}\r\n          ordered={this.purchaseHandler}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}